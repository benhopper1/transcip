{"debugObject":"general","label":"CIP","when":"2015-03-14 13:15:22","data":"INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 13:18:26","data":"INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 13:18:38","data":"INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 13:29:00","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 13:52:02","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 13:56:06","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 13:57:38","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 13:59:09","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 14:05:21","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 14:09:01","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 14:09:34","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 14:11:33","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 14:14:54","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"cip.onData.inTransportLayer_json","when":"2015-03-14 14:14:55","data":{"cipLayer":{"isWsPassThrough":false,"command":"sendServerName","message":"this is a test message","sourceServerName":false,"targetServerName":false}}}
{"debugObject":"general","label":"cip.onCipData.inTransportLayer_json","when":"2015-03-14 14:14:55","data":{"cipLayer":{"isWsPassThrough":false,"command":"sendServerName","message":"this is a test message","sourceServerName":false,"targetServerName":false}}}
{"debugObject":"general","label":"CIP","when":"2015-03-14 15:29:18","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 15:35:05","data":"CIP INTERFACE STARTING"}
{"debugObject":"general","label":"CIP","when":"2015-03-14 15:35:25","data":"CIP INTERFACE STARTING"}
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-14 15:38:46'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-14 15:38:46'[39m,
  data: 
   { threadId: [33m76[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426365526568[39m,
           _monotonicStartTime: [33m38097962[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m76[39m,
                 scrambleBuff1: <Buffer 40 51 56 3d 6b 25 71 30>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 37 64 73 34 47 4a 7d 58 21 39 3a 58>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m76[39m,
                   scrambleBuff1: <Buffer 40 51 56 3d 6b 25 71 30>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 37 64 73 34 47 4a 7d 58 21 39 3a 58>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m76[39m,
              scrambleBuff1: <Buffer 40 51 56 3d 6b 25 71 30>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 37 64 73 34 47 4a 7d 58 21 39 3a 58>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m76[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-14 15:57:00'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-14 15:57:00'[39m,
  data: 
   { threadId: [33m83[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426366620407[39m,
           _monotonicStartTime: [33m39191801[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m83[39m,
                 scrambleBuff1: <Buffer 31 28 70 21 50 51 26 67>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 54 50 75 7c 31 7b 3c 54 72 62 75 45>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m83[39m,
                   scrambleBuff1: <Buffer 31 28 70 21 50 51 26 67>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 54 50 75 7c 31 7b 3c 54 72 62 75 45>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m83[39m,
              scrambleBuff1: <Buffer 31 28 70 21 50 51 26 67>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 54 50 75 7c 31 7b 3c 54 72 62 75 45>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m83[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-14 15:57:35'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-14 15:57:35'[39m,
  data: 
   { threadId: [33m84[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426366655104[39m,
           _monotonicStartTime: [33m39226498[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m84[39m,
                 scrambleBuff1: <Buffer 5f 47 24 7a 60 50 50 7e>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 4e 4a 65 40 4d 42 42 63 4c 33 58 42>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m84[39m,
                   scrambleBuff1: <Buffer 5f 47 24 7a 60 50 50 7e>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 4e 4a 65 40 4d 42 42 63 4c 33 58 42>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m84[39m,
              scrambleBuff1: <Buffer 5f 47 24 7a 60 50 50 7e>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 4e 4a 65 40 4d 42 42 63 4c 33 58 42>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m84[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-14 16:20:52'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-14 16:20:52'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-14 16:20:52'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-14 16:20:52'[39m,
  data: 
   { threadId: [33m71[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426368052649[39m,
           _monotonicStartTime: [33m40624043[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m71[39m,
                 scrambleBuff1: <Buffer 58 59 38 47 40 49 2e 48>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 60 2e 5e 70 3b 72 4e 6c 58 51 6e 57>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m71[39m,
                   scrambleBuff1: <Buffer 58 59 38 47 40 49 2e 48>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 60 2e 5e 70 3b 72 4e 6c 58 51 6e 57>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m71[39m,
              scrambleBuff1: <Buffer 58 59 38 47 40 49 2e 48>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 60 2e 5e 70 3b 72 4e 6c 58 51 6e 57>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m71[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-14 18:27:00'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-14 18:27:00'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-14 18:27:00'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-14 18:27:00'[39m,
  data: 
   { threadId: [33m84[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426375620291[39m,
           _monotonicStartTime: [33m48191685[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m84[39m,
                 scrambleBuff1: <Buffer 79 29 5e 7c 76 5c 47 32>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 60 6d 26 6e 7b 42 73 3f 7b 73 4d 66>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m84[39m,
                   scrambleBuff1: <Buffer 79 29 5e 7c 76 5c 47 32>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 60 6d 26 6e 7b 42 73 3f 7b 73 4d 66>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m84[39m,
              scrambleBuff1: <Buffer 79 29 5e 7c 76 5c 47 32>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 60 6d 26 6e 7b 42 73 3f 7b 73 4d 66>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m84[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 06:20:38'[39m,
  data: 
   { threadId: [33m69[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m11[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426418438359[39m,
           _monotonicStartTime: [33m5030321[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m69[39m,
                 scrambleBuff1: <Buffer 30 3c 7a 76 61 61 44 6e>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 21 52 5c 58 27 54 54 28 68 56 56 2d>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m69[39m,
                   scrambleBuff1: <Buffer 30 3c 7a 76 61 61 44 6e>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 21 52 5c 58 27 54 54 28 68 56 56 2d>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m69[39m,
              scrambleBuff1: <Buffer 30 3c 7a 76 61 61 44 6e>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 21 52 5c 58 27 54 54 28 68 56 56 2d>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m69[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 06:28:45'[39m,
  data: 
   { threadId: [33m70[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m11[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426418925587[39m,
           _monotonicStartTime: [33m5517550[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m70[39m,
                 scrambleBuff1: <Buffer 37 43 2d 53 3d 73 51 78>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 2c 6d 62 26 31 64 26 2c 4a 72 7e 44>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m70[39m,
                   scrambleBuff1: <Buffer 37 43 2d 53 3d 73 51 78>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 2c 6d 62 26 31 64 26 2c 4a 72 7e 44>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m70[39m,
              scrambleBuff1: <Buffer 37 43 2d 53 3d 73 51 78>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 2c 6d 62 26 31 64 26 2c 4a 72 7e 44>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m70[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 06:33:09'[39m,
  data: 
   { threadId: [33m72[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m11[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426419189795[39m,
           _monotonicStartTime: [33m5781757[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m72[39m,
                 scrambleBuff1: <Buffer 2d 77 33 35 51 79 2d 6f>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 68 40 42 6c 78 39 4f 63 25 2a 43 55>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m72[39m,
                   scrambleBuff1: <Buffer 2d 77 33 35 51 79 2d 6f>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 68 40 42 6c 78 39 4f 63 25 2a 43 55>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m72[39m,
              scrambleBuff1: <Buffer 2d 77 33 35 51 79 2d 6f>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 68 40 42 6c 78 39 4f 63 25 2a 43 55>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m72[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 06:38:22'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 06:38:22'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 06:38:22'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 06:38:22'[39m,
  data: 
   { threadId: [33m77[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426419502682[39m,
           _monotonicStartTime: [33m6094645[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m77[39m,
                 scrambleBuff1: <Buffer 32 46 48 77 3f 73 48 4c>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 25 6f 26 6a 64 37 25 50 47 50 40 2c>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m77[39m,
                   scrambleBuff1: <Buffer 32 46 48 77 3f 73 48 4c>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 25 6f 26 6a 64 37 25 50 47 50 40 2c>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m77[39m,
              scrambleBuff1: <Buffer 32 46 48 77 3f 73 48 4c>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 25 6f 26 6a 64 37 25 50 47 50 40 2c>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m77[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 06:40:22'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 06:40:22'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 06:40:22'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 06:40:22'[39m,
  data: 
   { threadId: [33m84[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426419622356[39m,
           _monotonicStartTime: [33m6214318[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m84[39m,
                 scrambleBuff1: <Buffer 68 27 29 36 73 62 70 2c>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 2a 2b 3b 27 4f 38 68 28 2d 45 55 59>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m84[39m,
                   scrambleBuff1: <Buffer 68 27 29 36 73 62 70 2c>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 2a 2b 3b 27 4f 38 68 28 2d 45 55 59>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m84[39m,
              scrambleBuff1: <Buffer 68 27 29 36 73 62 70 2c>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 2a 2b 3b 27 4f 38 68 28 2d 45 55 59>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m84[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 06:49:01'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 06:49:01'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 06:49:01'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 06:49:01'[39m,
  data: 
   { threadId: [33m86[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426420141271[39m,
           _monotonicStartTime: [33m6733233[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m86[39m,
                 scrambleBuff1: <Buffer 31 59 4f 5c 62 57 6f 47>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 56 59 3b 5c 40 66 64 41 57 72 57 3c>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m86[39m,
                   scrambleBuff1: <Buffer 31 59 4f 5c 62 57 6f 47>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 56 59 3b 5c 40 66 64 41 57 72 57 3c>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m86[39m,
              scrambleBuff1: <Buffer 31 59 4f 5c 62 57 6f 47>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 56 59 3b 5c 40 66 64 41 57 72 57 3c>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m86[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 06:57:15'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 06:57:15'[39m,
  data: 
   { threadId: [33m88[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426420635628[39m,
           _monotonicStartTime: [33m7227591[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m88[39m,
                 scrambleBuff1: <Buffer 7a 45 29 3a 2a 62 2f 62>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 23 26 32 6a 40 40 5e 3a 46 33 6b 40>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m88[39m,
                   scrambleBuff1: <Buffer 7a 45 29 3a 2a 62 2f 62>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 23 26 32 6a 40 40 5e 3a 46 33 6b 40>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m88[39m,
              scrambleBuff1: <Buffer 7a 45 29 3a 2a 62 2f 62>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 23 26 32 6a 40 40 5e 3a 46 33 6b 40>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m88[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 06:59:39'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 06:59:39'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 06:59:39'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 06:59:39'[39m,
  data: 
   { threadId: [33m92[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426420779278[39m,
           _monotonicStartTime: [33m7371240[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m92[39m,
                 scrambleBuff1: <Buffer 74 5d 51 60 70 30 3d 23>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 36 24 50 47 52 48 53 45 42 58 76 67>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m92[39m,
                   scrambleBuff1: <Buffer 74 5d 51 60 70 30 3d 23>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 36 24 50 47 52 48 53 45 42 58 76 67>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m92[39m,
              scrambleBuff1: <Buffer 74 5d 51 60 70 30 3d 23>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 36 24 50 47 52 48 53 45 42 58 76 67>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m92[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 07:01:02'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:01:02'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:01:02'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 07:01:02'[39m,
  data: 
   { threadId: [33m95[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426420862355[39m,
           _monotonicStartTime: [33m7454317[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m95[39m,
                 scrambleBuff1: <Buffer 7d 54 68 31 56 40 7b 6f>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 38 67 23 70 31 40 2f 67 3e 3e 5c 36>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m95[39m,
                   scrambleBuff1: <Buffer 7d 54 68 31 56 40 7b 6f>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 38 67 23 70 31 40 2f 67 3e 3e 5c 36>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m95[39m,
              scrambleBuff1: <Buffer 7d 54 68 31 56 40 7b 6f>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 38 67 23 70 31 40 2f 67 3e 3e 5c 36>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m95[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 07:02:57'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:02:58'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:02:58'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 07:02:58'[39m,
  data: 
   { threadId: [33m98[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426420978037[39m,
           _monotonicStartTime: [33m7569999[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m98[39m,
                 scrambleBuff1: <Buffer 56 6a 33 5a 4e 56 47 3e>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 43 72 39 63 67 5a 6f 3d 25 3e 49 35>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m98[39m,
                   scrambleBuff1: <Buffer 56 6a 33 5a 4e 56 47 3e>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 43 72 39 63 67 5a 6f 3d 25 3e 49 35>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m98[39m,
              scrambleBuff1: <Buffer 56 6a 33 5a 4e 56 47 3e>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 43 72 39 63 67 5a 6f 3d 25 3e 49 35>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m98[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 07:05:28'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:05:28'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:05:28'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 07:05:28'[39m,
  data: 
   { threadId: [33m101[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426421128749[39m,
           _monotonicStartTime: [33m7720711[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m101[39m,
                 scrambleBuff1: <Buffer 6c 38 6f 4a 61 29 49 71>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 22 51 51 26 63 43 63 4c 2f 47 57 5e>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m101[39m,
                   scrambleBuff1: <Buffer 6c 38 6f 4a 61 29 49 71>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 22 51 51 26 63 43 63 4c 2f 47 57 5e>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m101[39m,
              scrambleBuff1: <Buffer 6c 38 6f 4a 61 29 49 71>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 22 51 51 26 63 43 63 4c 2f 47 57 5e>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m101[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 07:08:39'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:08:39'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:08:39'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 07:08:39'[39m,
  data: 
   { threadId: [33m104[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426421319554[39m,
           _monotonicStartTime: [33m7911516[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m104[39m,
                 scrambleBuff1: <Buffer 32 2e 2d 38 6f 47 57 5e>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 52 60 6d 23 61 41 62 49 27 26 2a 3e>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m104[39m,
                   scrambleBuff1: <Buffer 32 2e 2d 38 6f 47 57 5e>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 52 60 6d 23 61 41 62 49 27 26 2a 3e>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m104[39m,
              scrambleBuff1: <Buffer 32 2e 2d 38 6f 47 57 5e>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 52 60 6d 23 61 41 62 49 27 26 2a 3e>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m104[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 07:19:08'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:19:09'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:19:09'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 07:19:09'[39m,
  data: 
   { threadId: [33m107[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426421949058[39m,
           _monotonicStartTime: [33m8541020[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m107[39m,
                 scrambleBuff1: <Buffer 79 6e 3e 2b 5b 69 7d 59>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 26 50 42 3a 3c 5e 46 24 7b 62 59 77>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m107[39m,
                   scrambleBuff1: <Buffer 79 6e 3e 2b 5b 69 7d 59>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 26 50 42 3a 3c 5e 46 24 7b 62 59 77>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m107[39m,
              scrambleBuff1: <Buffer 79 6e 3e 2b 5b 69 7d 59>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 26 50 42 3a 3c 5e 46 24 7b 62 59 77>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m107[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 07:23:56'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:23:57'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:23:57'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 07:23:57'[39m,
  data: 
   { threadId: [33m110[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426422236977[39m,
           _monotonicStartTime: [33m8828939[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m110[39m,
                 scrambleBuff1: <Buffer 4f 62 7d 6e 30 43 3f 54>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 68 2d 47 5d 21 29 47 6b 66 3d 3c 55>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m110[39m,
                   scrambleBuff1: <Buffer 4f 62 7d 6e 30 43 3f 54>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 68 2d 47 5d 21 29 47 6b 66 3d 3c 55>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m110[39m,
              scrambleBuff1: <Buffer 4f 62 7d 6e 30 43 3f 54>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 68 2d 47 5d 21 29 47 6b 66 3d 3c 55>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m110[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 07:28:09'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 07:28:09'[39m,
  data: 
   { threadId: [33m113[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426422489375[39m,
           _monotonicStartTime: [33m9081337[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m113[39m,
                 scrambleBuff1: <Buffer 6b 4b 74 28 66 4c 2a 2b>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 3a 7e 32 78 2b 66 44 60 38 34 3c 6f>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m113[39m,
                   scrambleBuff1: <Buffer 6b 4b 74 28 66 4c 2a 2b>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 3a 7e 32 78 2b 66 44 60 38 34 3c 6f>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m113[39m,
              scrambleBuff1: <Buffer 6b 4b 74 28 66 4c 2a 2b>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 3a 7e 32 78 2b 66 44 60 38 34 3c 6f>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m113[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:28:09'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 07:28:09'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 08:36:17'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:36:17'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:36:17'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 08:36:17'[39m,
  data: 
   { threadId: [33m116[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426426577583[39m,
           _monotonicStartTime: [33m13169545[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m116[39m,
                 scrambleBuff1: <Buffer 4c 6c 5e 6e 32 4a 5d 76>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 58 39 50 68 3c 31 7e 4a 36 6d 43 48>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m116[39m,
                   scrambleBuff1: <Buffer 4c 6c 5e 6e 32 4a 5d 76>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 58 39 50 68 3c 31 7e 4a 36 6d 43 48>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m116[39m,
              scrambleBuff1: <Buffer 4c 6c 5e 6e 32 4a 5d 76>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 58 39 50 68 3c 31 7e 4a 36 6d 43 48>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m116[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 08:37:54'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:37:54'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:37:54'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 08:37:54'[39m,
  data: 
   { threadId: [33m119[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426426674664[39m,
           _monotonicStartTime: [33m13266626[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m119[39m,
                 scrambleBuff1: <Buffer 35 68 2f 4f 23 5c 29 54>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 4d 63 2d 54 41 26 3a 2f 7d 4c 41 41>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m119[39m,
                   scrambleBuff1: <Buffer 35 68 2f 4f 23 5c 29 54>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 4d 63 2d 54 41 26 3a 2f 7d 4c 41 41>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m119[39m,
              scrambleBuff1: <Buffer 35 68 2f 4f 23 5c 29 54>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 4d 63 2d 54 41 26 3a 2f 7d 4c 41 41>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m119[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 08:49:54'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:49:54'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:49:54'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 08:49:54'[39m,
  data: 
   { threadId: [33m124[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426427394636[39m,
           _monotonicStartTime: [33m13986599[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m124[39m,
                 scrambleBuff1: <Buffer 6e 28 78 46 36 7a 28 55>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 51 75 7c 30 77 29 62 34 7b 30 7a 38>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m124[39m,
                   scrambleBuff1: <Buffer 6e 28 78 46 36 7a 28 55>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 51 75 7c 30 77 29 62 34 7b 30 7a 38>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m124[39m,
              scrambleBuff1: <Buffer 6e 28 78 46 36 7a 28 55>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 51 75 7c 30 77 29 62 34 7b 30 7a 38>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m124[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 08:55:17'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:55:17'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:55:17'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 08:55:18'[39m,
  data: 
   { threadId: [33m127[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426427717899[39m,
           _monotonicStartTime: [33m14309861[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m127[39m,
                 scrambleBuff1: <Buffer 38 31 2a 7e 5d 39 41 79>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 62 5d 2e 68 45 5c 24 3a 36 41 26 37>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m127[39m,
                   scrambleBuff1: <Buffer 38 31 2a 7e 5d 39 41 79>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 62 5d 2e 68 45 5c 24 3a 36 41 26 37>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m127[39m,
              scrambleBuff1: <Buffer 38 31 2a 7e 5d 39 41 79>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 62 5d 2e 68 45 5c 24 3a 36 41 26 37>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m127[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:56:56'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'24961a90-cb1b-11e4-a50b-09ca7b4c7249'[39m,
        params: 
         { waitingId: [32m'07292510-cb1b-11e4-bca0-fb55291343a5'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'dae65004-b4aa-41ce-80a4-90d997fe1f23'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'07292510-cb1b-11e4-bca0-fb55291343a5'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-15 08:56:56'[39m,
  data: 
   { waitingId: [32m'07292510-cb1b-11e4-bca0-fb55291343a5'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'dae65004-b4aa-41ce-80a4-90d997fe1f23'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'07292510-cb1b-11e4-bca0-fb55291343a5'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 08:56:56'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'24961a90-cb1b-11e4-a50b-09ca7b4c7249'[39m,
        params: 
         { waitingId: [32m'07292510-cb1b-11e4-bca0-fb55291343a5'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'dae65004-b4aa-41ce-80a4-90d997fe1f23'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'07292510-cb1b-11e4-bca0-fb55291343a5'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 12:47:53'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 12:47:53'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 12:47:53'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 12:47:53'[39m,
  data: 
   { threadId: [33m132[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426441673823[39m,
           _monotonicStartTime: [33m28265785[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m132[39m,
                 scrambleBuff1: <Buffer 71 7d 41 6a 74 29 6c 64>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 33 6f 56 42 28 3f 43 72 35 4e 6c 53>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m132[39m,
                   scrambleBuff1: <Buffer 71 7d 41 6a 74 29 6c 64>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 33 6f 56 42 28 3f 43 72 35 4e 6c 53>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m132[39m,
              scrambleBuff1: <Buffer 71 7d 41 6a 74 29 6c 64>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 33 6f 56 42 28 3f 43 72 35 4e 6c 53>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m132[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 12:49:26'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'9f3ea7b0-cb3b-11e4-af91-6b94bfb7d750'[39m,
        params: 
         { waitingId: [32m'8abfeba0-cb3b-11e4-af23-0b6f8d29659b'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'42999ae5-4720-4df2-83d5-66b7bf9266d0'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'8abfeba0-cb3b-11e4-af23-0b6f8d29659b'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-15 12:49:26'[39m,
  data: 
   { waitingId: [32m'8abfeba0-cb3b-11e4-af23-0b6f8d29659b'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'42999ae5-4720-4df2-83d5-66b7bf9266d0'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'8abfeba0-cb3b-11e4-af23-0b6f8d29659b'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 12:49:26'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'9f3ea7b0-cb3b-11e4-af91-6b94bfb7d750'[39m,
        params: 
         { waitingId: [32m'8abfeba0-cb3b-11e4-af23-0b6f8d29659b'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'42999ae5-4720-4df2-83d5-66b7bf9266d0'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'8abfeba0-cb3b-11e4-af23-0b6f8d29659b'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 14:13:38'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:13:38'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:13:38'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 14:13:38'[39m,
  data: 
   { threadId: [33m139[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426446818913[39m,
           _monotonicStartTime: [33m33410875[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m139[39m,
                 scrambleBuff1: <Buffer 46 55 58 38 4e 61 7e 75>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 4f 6c 53 3a 66 73 31 39 67 7e 64 5b>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m139[39m,
                   scrambleBuff1: <Buffer 46 55 58 38 4e 61 7e 75>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 4f 6c 53 3a 66 73 31 39 67 7e 64 5b>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m139[39m,
              scrambleBuff1: <Buffer 46 55 58 38 4e 61 7e 75>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 4f 6c 53 3a 66 73 31 39 67 7e 64 5b>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m139[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:15:19'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'9ebcfe20-cb47-11e4-8645-c9129cc50ece'[39m,
        params: 
         { waitingId: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'664bc384-acc6-4778-b494-4ea5186bb7b9'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-15 14:15:19'[39m,
  data: 
   { waitingId: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'664bc384-acc6-4778-b494-4ea5186bb7b9'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:15:19'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'9ebcfe20-cb47-11e4-8645-c9129cc50ece'[39m,
        params: 
         { waitingId: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'664bc384-acc6-4778-b494-4ea5186bb7b9'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:17:27'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'eb0ad630-cb47-11e4-8645-c9129cc50ece'[39m,
        params: 
         { waitingId: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'c2187bc2-a1ea-49bb-bd3e-75acf6deea09'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-15 14:17:27'[39m,
  data: 
   { waitingId: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'c2187bc2-a1ea-49bb-bd3e-75acf6deea09'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:17:27'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'eb0ad630-cb47-11e4-8645-c9129cc50ece'[39m,
        params: 
         { waitingId: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'c2187bc2-a1ea-49bb-bd3e-75acf6deea09'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'8e9b81b0-cb47-11e4-b6ae-217bf831dc8d'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-15 14:22:17'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:22:18'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:22:18'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-15 14:22:18'[39m,
  data: 
   { threadId: [33m143[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426447338087[39m,
           _monotonicStartTime: [33m33930049[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m143[39m,
                 scrambleBuff1: <Buffer 47 40 49 2e 48 60 2a 4e>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 2d 35 5f 61 4b 34 5f 61 4a 31 53 2e>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m143[39m,
                   scrambleBuff1: <Buffer 47 40 49 2e 48 60 2a 4e>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 2d 35 5f 61 4b 34 5f 61 4a 31 53 2e>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m143[39m,
              scrambleBuff1: <Buffer 47 40 49 2e 48 60 2a 4e>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 2d 35 5f 61 4b 34 5f 61 4a 31 53 2e>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m143[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:23:20'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'bda72850-cb48-11e4-b4f7-cfe0dc9d60ac'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'd2425b23-ac55-4a01-8ba5-8bcd6b22b645'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-15 14:23:20'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'd2425b23-ac55-4a01-8ba5-8bcd6b22b645'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:23:20'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'bda72850-cb48-11e4-b4f7-cfe0dc9d60ac'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'd2425b23-ac55-4a01-8ba5-8bcd6b22b645'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:32:54'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'13a534d0-cb4a-11e4-b4f7-cfe0dc9d60ac'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'108039ea-c1d8-491a-9f8e-7f3591cf4f7d'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-15 14:32:54'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'108039ea-c1d8-491a-9f8e-7f3591cf4f7d'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-15 14:32:54'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'13a534d0-cb4a-11e4-b4f7-cfe0dc9d60ac'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'108039ea-c1d8-491a-9f8e-7f3591cf4f7d'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'afc589c0-cb48-11e4-8411-a70f251447f6'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 05:30:01'[39m,
  data: 
   { threadId: [33m106[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m11[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426501801630[39m,
           _monotonicStartTime: [33m1709593[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m106[39m,
                 scrambleBuff1: <Buffer 54 2f 2c 2f 46 51 45 48>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 76 3b 61 58 73 5a 49 40 43 6f 29 78>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m106[39m,
                   scrambleBuff1: <Buffer 54 2f 2c 2f 46 51 45 48>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 76 3b 61 58 73 5a 49 40 43 6f 29 78>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m106[39m,
              scrambleBuff1: <Buffer 54 2f 2c 2f 46 51 45 48>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 76 3b 61 58 73 5a 49 40 43 6f 29 78>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m106[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-16 05:31:00'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:31:00'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:31:00'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 05:31:00'[39m,
  data: 
   { threadId: [33m108[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426501860620[39m,
           _monotonicStartTime: [33m1768582[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m108[39m,
                 scrambleBuff1: <Buffer 73 53 26 60 34 21 49 2c>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 3e 35 2c 7c 50 59 4e 5d 66 6a 60 26>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m108[39m,
                   scrambleBuff1: <Buffer 73 53 26 60 34 21 49 2c>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 3e 35 2c 7c 50 59 4e 5d 66 6a 60 26>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m108[39m,
              scrambleBuff1: <Buffer 73 53 26 60 34 21 49 2c>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 3e 35 2c 7c 50 59 4e 5d 66 6a 60 26>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m108[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:36:32'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'50478680-cbc8-11e4-9cae-d74b398f603c'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'308f1a60-cbc8-11e4-9c71-edf9033da895'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'3f7c1687-36b5-4e13-8393-48021e334afd'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'308f1a60-cbc8-11e4-9c71-edf9033da895'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:36:32'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'50478680-cbc8-11e4-9cae-d74b398f603c'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'308f1a60-cbc8-11e4-9c71-edf9033da895'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'3f7c1687-36b5-4e13-8393-48021e334afd'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'308f1a60-cbc8-11e4-9c71-edf9033da895'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-16 05:36:32'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'308f1a60-cbc8-11e4-9c71-edf9033da895'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'3f7c1687-36b5-4e13-8393-48021e334afd'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'308f1a60-cbc8-11e4-9c71-edf9033da895'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:47:05'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'c98a8140-cbc9-11e4-9cae-d74b398f603c'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'926057d0-cbc9-11e4-9c71-edf9033da895'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'eba9e0ff-a19c-45d1-994c-08dfe6411b4b'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'926057d0-cbc9-11e4-9c71-edf9033da895'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-16 05:47:05'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'926057d0-cbc9-11e4-9c71-edf9033da895'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'eba9e0ff-a19c-45d1-994c-08dfe6411b4b'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'926057d0-cbc9-11e4-9c71-edf9033da895'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:47:05'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'c98a8140-cbc9-11e4-9cae-d74b398f603c'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'926057d0-cbc9-11e4-9c71-edf9033da895'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'eba9e0ff-a19c-45d1-994c-08dfe6411b4b'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'926057d0-cbc9-11e4-9c71-edf9033da895'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-16 05:51:24'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:51:24'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:51:24'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 05:51:24'[39m,
  data: 
   { threadId: [33m113[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426503084812[39m,
           _monotonicStartTime: [33m2992775[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m113[39m,
                 scrambleBuff1: <Buffer 2c 2a 2e 45 51 4a 5c 71>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 45 44 62 44 68 63 38 2d 77 31 2d 2c>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m113[39m,
                   scrambleBuff1: <Buffer 2c 2a 2e 45 51 4a 5c 71>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 45 44 62 44 68 63 38 2d 77 31 2d 2c>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m113[39m,
              scrambleBuff1: <Buffer 2c 2a 2e 45 51 4a 5c 71>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 45 44 62 44 68 63 38 2d 77 31 2d 2c>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m113[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:52:46'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'94985100-cbca-11e4-a1da-dda61ee4636d'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'd9ce176f-b3e2-473b-a054-51ff23a44a56'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-16 05:52:46'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'd9ce176f-b3e2-473b-a054-51ff23a44a56'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 05:52:46'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'94985100-cbca-11e4-a1da-dda61ee4636d'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'd9ce176f-b3e2-473b-a054-51ff23a44a56'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:03:00'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'02d2bdd0-cbcc-11e4-a1da-dda61ee4636d'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'39e0fae8-f455-4712-a0bd-86ffa11cd9f6'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-16 06:03:00'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'39e0fae8-f455-4712-a0bd-86ffa11cd9f6'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:03:00'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'02d2bdd0-cbcc-11e4-a1da-dda61ee4636d'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'39e0fae8-f455-4712-a0bd-86ffa11cd9f6'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:10:56'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'1e7f2220-cbcd-11e4-a1da-dda61ee4636d'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'ef2f0e89-938c-4893-bb3e-276b32327bb9'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-16 06:10:56'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'ef2f0e89-938c-4893-bb3e-276b32327bb9'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:10:56'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'1e7f2220-cbcd-11e4-a1da-dda61ee4636d'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'ef2f0e89-938c-4893-bb3e-276b32327bb9'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'781ac490-cbca-11e4-bb49-bdecc51b051f'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:13:48'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'85068a10-cbcd-11e4-a1da-dda61ee4636d'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'60d0d330-cbcd-11e4-bb49-bdecc51b051f'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'da2975ee-4394-444a-90a7-1547c49c5ecd'[39m,
              dataLayer: 
               { data: { index: [33m0[39m, lookupId: [32m'626'[39m },
                 action: [32m'actionRequest'[39m,
                 cmd: [32m'syncMResponse'[39m,
                 cd: [32m'60d0d330-cbcd-11e4-bb49-bdecc51b051f'[39m,
                 request: [32m'contactSliderSelected'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 filterKey: [32m'filter'[39m,
                 filterValue: [32m'webMenu'[39m,
                 toDeviceTokenId: [32m'792f8890-cbcd-11e4-a1da-dda61ee4636d'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-16 06:13:48'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'60d0d330-cbcd-11e4-bb49-bdecc51b051f'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'da2975ee-4394-444a-90a7-1547c49c5ecd'[39m,
        dataLayer: 
         { data: { index: [33m0[39m, lookupId: [32m'626'[39m },
           action: [32m'actionRequest'[39m,
           cmd: [32m'syncMResponse'[39m,
           cd: [32m'60d0d330-cbcd-11e4-bb49-bdecc51b051f'[39m,
           request: [32m'contactSliderSelected'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           filterKey: [32m'filter'[39m,
           filterValue: [32m'webMenu'[39m,
           toDeviceTokenId: [32m'792f8890-cbcd-11e4-a1da-dda61ee4636d'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:13:48'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'85068a10-cbcd-11e4-a1da-dda61ee4636d'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'60d0d330-cbcd-11e4-bb49-bdecc51b051f'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'da2975ee-4394-444a-90a7-1547c49c5ecd'[39m,
              dataLayer: 
               { data: { index: [33m0[39m, lookupId: [32m'626'[39m },
                 action: [32m'actionRequest'[39m,
                 cmd: [32m'syncMResponse'[39m,
                 cd: [32m'60d0d330-cbcd-11e4-bb49-bdecc51b051f'[39m,
                 request: [32m'contactSliderSelected'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 filterKey: [32m'filter'[39m,
                 filterValue: [32m'webMenu'[39m,
                 toDeviceTokenId: [32m'792f8890-cbcd-11e4-a1da-dda61ee4636d'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-16 06:15:27'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:15:27'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:15:27'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 06:15:27'[39m,
  data: 
   { threadId: [33m119[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426504527183[39m,
           _monotonicStartTime: [33m4435145[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m119[39m,
                 scrambleBuff1: <Buffer 3a 66 74 33 3e 7d 7c 79>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 69 22 68 6a 5c 6e 33 50 7a 37 41 7e>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m119[39m,
                   scrambleBuff1: <Buffer 3a 66 74 33 3e 7d 7c 79>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 69 22 68 6a 5c 6e 33 50 7a 37 41 7e>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m119[39m,
              scrambleBuff1: <Buffer 3a 66 74 33 3e 7d 7c 79>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 69 22 68 6a 5c 6e 33 50 7a 37 41 7e>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m119[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:17:49'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'149443c0-cbce-11e4-95d9-9375b16810d4'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'd2ebf210-cbcd-11e4-aebe-0915490321cb'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'551c2762-99e5-4980-8caf-633a4b5f78c9'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'd2ebf210-cbcd-11e4-aebe-0915490321cb'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-16 06:17:49'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'd2ebf210-cbcd-11e4-aebe-0915490321cb'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'551c2762-99e5-4980-8caf-633a4b5f78c9'[39m,
        dataLayer: 
         { cmd: [32m'syncMResponse'[39m,
           cd: [32m'd2ebf210-cbcd-11e4-aebe-0915490321cb'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:17:49'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'149443c0-cbce-11e4-95d9-9375b16810d4'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'd2ebf210-cbcd-11e4-aebe-0915490321cb'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'551c2762-99e5-4980-8caf-633a4b5f78c9'[39m,
              dataLayer: 
               { cmd: [32m'syncMResponse'[39m,
                 cd: [32m'd2ebf210-cbcd-11e4-aebe-0915490321cb'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-16 06:28:34'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:28:34'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:28:34'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 06:28:34'[39m,
  data: 
   { threadId: [33m123[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426505314901[39m,
           _monotonicStartTime: [33m5222863[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m123[39m,
                 scrambleBuff1: <Buffer 2f 67 39 28 59 69 27 21>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 6d 26 73 33 40 2a 4e 2b 2d 3d 2b 60>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m123[39m,
                   scrambleBuff1: <Buffer 2f 67 39 28 59 69 27 21>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 6d 26 73 33 40 2a 4e 2b 2d 3d 2b 60>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m123[39m,
              scrambleBuff1: <Buffer 2f 67 39 28 59 69 27 21>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 6d 26 73 33 40 2a 4e 2b 2d 3d 2b 60>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m123[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:32:04'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'11fb8590-cbd0-11e4-9078-a580818f5ae9'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'cb853110-cbcf-11e4-85c1-db6d837cce3e'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'e537d28f-a9b5-461a-821b-99a5b4dee7c8'[39m,
              dataLayer: 
               { style: [32m'mobileMigration'[39m,
                 cmd: [32m'syncMResponse'[39m,
                 cd: [32m'cb853110-cbcf-11e4-85c1-db6d837cce3e'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP Callback through function'[39m,
  when: [32m'2015-03-16 06:32:04'[39m,
  data: 
   { action: [32m'reconnect'[39m,
     waitingId: [32m'cb853110-cbcf-11e4-85c1-db6d837cce3e'[39m,
     ip: [32m'192.168.0.16'[39m,
     port: [33m30401[39m,
     security: [32m'hkjhkjh'[39m,
     newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
     transportData: 
      { securiryToken: [32m'notImplementedYet'[39m,
        transactionId: [32m'e537d28f-a9b5-461a-821b-99a5b4dee7c8'[39m,
        dataLayer: 
         { style: [32m'mobileMigration'[39m,
           cmd: [32m'syncMResponse'[39m,
           cd: [32m'cb853110-cbcf-11e4-85c1-db6d837cce3e'[39m },
        routingLayer: 
         { command: [32m'connectWaitingQr'[39m,
           type: [32m'transactionToServer'[39m },
        deviceId: [32m'9790'[39m,
        userId: [32m'389'[39m },
     serverName: [32m'Server_ws_30401'[39m } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 06:32:04'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'execFunction'[39m,
        functionId: [32m'11fb8590-cbd0-11e4-9078-a580818f5ae9'[39m,
        params: 
         { action: [32m'reconnect'[39m,
           waitingId: [32m'cb853110-cbcf-11e4-85c1-db6d837cce3e'[39m,
           ip: [32m'192.168.0.16'[39m,
           port: [33m30401[39m,
           security: [32m'hkjhkjh'[39m,
           newFullPathInformationRoute: [32m'http://192.168.0.16:30001/information/default'[39m,
           transportData: 
            { securiryToken: [32m'notImplementedYet'[39m,
              transactionId: [32m'e537d28f-a9b5-461a-821b-99a5b4dee7c8'[39m,
              dataLayer: 
               { style: [32m'mobileMigration'[39m,
                 cmd: [32m'syncMResponse'[39m,
                 cd: [32m'cb853110-cbcf-11e4-85c1-db6d837cce3e'[39m },
              routingLayer: 
               { command: [32m'connectWaitingQr'[39m,
                 type: [32m'transactionToServer'[39m },
              deviceId: [32m'9790'[39m,
              userId: [32m'389'[39m },
           serverName: [32m'Server_ws_30401'[39m } } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-16 07:36:02'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 07:36:02'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 07:36:02'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 07:36:02'[39m,
  data: 
   { threadId: [33m69[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426509362566[39m,
           _monotonicStartTime: [33m9270528[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m69[39m,
                 scrambleBuff1: <Buffer 34 34 48 4f 34 54 2d 23>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 63 4d 37 69 2c 3f 36 32 35 56 31 2f>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m69[39m,
                   scrambleBuff1: <Buffer 34 34 48 4f 34 54 2d 23>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 63 4d 37 69 2c 3f 36 32 35 56 31 2f>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m69[39m,
              scrambleBuff1: <Buffer 34 34 48 4f 34 54 2d 23>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 63 4d 37 69 2c 3f 36 32 35 56 31 2f>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m69[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-16 07:38:02'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 07:38:02'[39m,
  data: 
   { threadId: [33m71[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426509482426[39m,
           _monotonicStartTime: [33m9390389[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m71[39m,
                 scrambleBuff1: <Buffer 62 6e 21 54 64 79 56 23>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 46 79 51 66 2f 55 40 22 25 35 76 78>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m71[39m,
                   scrambleBuff1: <Buffer 62 6e 21 54 64 79 56 23>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 46 79 51 66 2f 55 40 22 25 35 76 78>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m71[39m,
              scrambleBuff1: <Buffer 62 6e 21 54 64 79 56 23>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 46 79 51 66 2f 55 40 22 25 35 76 78>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m71[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-16 07:40:25'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 07:40:25'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 07:40:25'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 07:40:25'[39m,
  data: 
   { threadId: [33m75[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426509625202[39m,
           _monotonicStartTime: [33m9533164[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m75[39m,
                 scrambleBuff1: <Buffer 7d 38 3f 70 39 6a 2c 38>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 75 66 7e 67 6a 5f 7c 71 44 3e 47 2e>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m75[39m,
                   scrambleBuff1: <Buffer 7d 38 3f 70 39 6a 2c 38>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 75 66 7e 67 6a 5f 7c 71 44 3e 47 2e>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m75[39m,
              scrambleBuff1: <Buffer 7d 38 3f 70 39 6a 2c 38>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 75 66 7e 67 6a 5f 7c 71 44 3e 47 2e>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m75[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-16 07:43:21'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 07:43:21'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 07:43:21'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 07:43:21'[39m,
  data: 
   { threadId: [33m80[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426509801623[39m,
           _monotonicStartTime: [33m9709585[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m80[39m,
                 scrambleBuff1: <Buffer 2b 6f 6c 53 38 5f 55 6c>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 42 44 6b 72 77 22 3e 50 5a 53 71 5d>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m80[39m,
                   scrambleBuff1: <Buffer 2b 6f 6c 53 38 5f 55 6c>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 42 44 6b 72 77 22 3e 50 5a 53 71 5d>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m80[39m,
              scrambleBuff1: <Buffer 2b 6f 6c 53 38 5f 55 6c>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 42 44 6b 72 77 22 3e 50 5a 53 71 5d>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m80[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'CIP'[39m,
  when: [32m'2015-03-16 08:08:01'[39m,
  data: [32m'CIP INTERFACE STARTING'[39m }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 08:08:02'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'cip.onCipData.inTransportLayer_json'[39m,
  when: [32m'2015-03-16 08:08:02'[39m,
  data: 
   { cipLayer: 
      { isWsPassThrough: [33mfalse[39m,
        command: [32m'sendServerName'[39m,
        message: [32m'this is a test message'[39m,
        sourceServerName: [33mfalse[39m,
        targetServerName: [33mfalse[39m } } }
{ debugObject: [32m'general'[39m,
  label: [32m'[models.connection.js] MySql.connect'[39m,
  when: [32m'2015-03-16 08:08:02'[39m,
  data: 
   { threadId: [33m83[39m,
     connection: 
      { domain: [1mnull[22m,
        _events: {},
        _maxListeners: [33m10[39m,
        config: 
         { host: [32m'192.168.0.16'[39m,
           port: [33m3306[39m,
           localAddress: [90mundefined[39m,
           socketPath: [90mundefined[39m,
           user: [32m'ben'[39m,
           password: [32m'250BenHop!@#'[39m,
           database: [32m'arfSync'[39m,
           connectTimeout: [33m10000[39m,
           insecureAuth: [33mfalse[39m,
           supportBigNumbers: [33mfalse[39m,
           bigNumberStrings: [33mfalse[39m,
           dateStrings: [33mfalse[39m,
           debug: [90mundefined[39m,
           trace: [33mtrue[39m,
           stringifyObjects: [33mfalse[39m,
           timezone: [32m'local'[39m,
           flags: [32m''[39m,
           queryFormat: [90mundefined[39m,
           pool: [90mundefined[39m,
           ssl: [33mfalse[39m,
           multipleStatements: [33mfalse[39m,
           typeCast: [33mtrue[39m,
           maxPacketSize: [33m0[39m,
           charsetNumber: [33m33[39m,
           clientFlags: [33m193487[39m,
           protocol41: [33mtrue[39m },
        _socket: 
         { _connecting: [33mfalse[39m,
           _handle: 
            { fd: [33m12[39m,
              writeQueueSize: [33m0[39m,
              owner: [36m[Circular][39m,
              onread: [36m[Function: onread][39m,
              reading: [33mtrue[39m },
           _readableState: 
            { highWaterMark: [33m16384[39m,
              buffer: [],
              length: [33m0[39m,
              pipes: [1mnull[22m,
              pipesCount: [33m0[39m,
              flowing: [33mfalse[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              calledRead: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              objectMode: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              ranOut: [33mfalse[39m,
              awaitDrain: [33m0[39m,
              readingMore: [33mfalse[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m },
           readable: [33mtrue[39m,
           domain: [1mnull[22m,
           _events: 
            { end: 
               [ { [Function: g] listener: [36m[Function: onend][39m },
                 [36m[Function][39m ],
              finish: [36m[Function: onSocketFinish][39m,
              _socketEnd: [36m[Function: onSocketEnd][39m,
              data: [36m[Function][39m,
              readable: [36m[Function][39m,
              connect: [ [36m[Function][39m ],
              error: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           _writableState: 
            { highWaterMark: [33m16384[39m,
              objectMode: [33mfalse[39m,
              needDrain: [33mfalse[39m,
              ending: [33mfalse[39m,
              ended: [33mfalse[39m,
              finished: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              buffer: [],
              errorEmitted: [33mfalse[39m },
           writable: [33mtrue[39m,
           allowHalfOpen: [33mfalse[39m,
           onend: [1mnull[22m,
           destroyed: [33mfalse[39m,
           bytesRead: [33m106[39m,
           _bytesDispatched: [33m69[39m,
           _pendingData: [1mnull[22m,
           _pendingEncoding: [32m''[39m,
           pipe: [36m[Function][39m,
           addListener: [36m[Function: addListener][39m,
           on: [36m[Function: addListener][39m,
           pause: [36m[Function][39m,
           resume: [36m[Function][39m,
           read: [36m[Function][39m,
           _consuming: [33mtrue[39m,
           _idleTimeout: [33m-1[39m,
           _idleNext: [1mnull[22m,
           _idlePrev: [1mnull[22m,
           _idleStart: [33m1426511282022[39m,
           _monotonicStartTime: [33m11189984[39m },
        _protocol: 
         { domain: [1mnull[22m,
           _events: 
            { data: [36m[Function][39m,
              end: [ [36m[Function][39m, [36m[Function][39m ],
              handshake: [36m[Function][39m,
              unhandledError: [36m[Function][39m,
              drain: [36m[Function][39m },
           _maxListeners: [33m10[39m,
           readable: [33mtrue[39m,
           writable: [33mtrue[39m,
           _config: 
            { host: [32m'192.168.0.16'[39m,
              port: [33m3306[39m,
              localAddress: [90mundefined[39m,
              socketPath: [90mundefined[39m,
              user: [32m'ben'[39m,
              password: [32m'250BenHop!@#'[39m,
              database: [32m'arfSync'[39m,
              connectTimeout: [33m10000[39m,
              insecureAuth: [33mfalse[39m,
              supportBigNumbers: [33mfalse[39m,
              bigNumberStrings: [33mfalse[39m,
              dateStrings: [33mfalse[39m,
              debug: [90mundefined[39m,
              trace: [33mtrue[39m,
              stringifyObjects: [33mfalse[39m,
              timezone: [32m'local'[39m,
              flags: [32m''[39m,
              queryFormat: [90mundefined[39m,
              pool: [90mundefined[39m,
              ssl: [33mfalse[39m,
              multipleStatements: [33mfalse[39m,
              typeCast: [33mtrue[39m,
              maxPacketSize: [33m0[39m,
              charsetNumber: [33m33[39m,
              clientFlags: [33m193487[39m,
              protocol41: [33mtrue[39m },
           _connection: [36m[Circular][39m,
           _callback: [1mnull[22m,
           _fatalError: [1mnull[22m,
           _quitSequence: [1mnull[22m,
           _handshakeSequence: 
            { domain: [1mnull[22m,
              _events: 
               { error: [36m[Function][39m,
                 packet: [36m[Function][39m,
                 end: [36m[Function][39m,
                 timeout: [36m[Function][39m,
                 [32m'start-tls'[39m: [36m[Function][39m },
              _maxListeners: [33m10[39m,
              _callback: [36m[Function][39m,
              _callSite: [1mnull[22m,
              _ended: [33mtrue[39m,
              _timeout: [90mundefined[39m,
              _idleNext: [1mnull[22m,
              _idlePrev: [1mnull[22m,
              _idleStart: [1mnull[22m,
              _idleTimeout: [90mundefined[39m,
              _repeat: [1mnull[22m,
              _config: 
               { host: [32m'192.168.0.16'[39m,
                 port: [33m3306[39m,
                 localAddress: [90mundefined[39m,
                 socketPath: [90mundefined[39m,
                 user: [32m'ben'[39m,
                 password: [32m'250BenHop!@#'[39m,
                 database: [32m'arfSync'[39m,
                 connectTimeout: [33m10000[39m,
                 insecureAuth: [33mfalse[39m,
                 supportBigNumbers: [33mfalse[39m,
                 bigNumberStrings: [33mfalse[39m,
                 dateStrings: [33mfalse[39m,
                 debug: [90mundefined[39m,
                 trace: [33mtrue[39m,
                 stringifyObjects: [33mfalse[39m,
                 timezone: [32m'local'[39m,
                 flags: [32m''[39m,
                 queryFormat: [90mundefined[39m,
                 pool: [90mundefined[39m,
                 ssl: [33mfalse[39m,
                 multipleStatements: [33mfalse[39m,
                 typeCast: [33mtrue[39m,
                 maxPacketSize: [33m0[39m,
                 charsetNumber: [33m33[39m,
                 clientFlags: [33m193487[39m,
                 protocol41: [33mtrue[39m },
              _handshakeInitializationPacket: 
               { protocolVersion: [33m10[39m,
                 serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                 threadId: [33m83[39m,
                 scrambleBuff1: <Buffer 46 25 25 29 3e 3a 4a 44>,
                 filler1: <Buffer 00>,
                 serverCapabilities1: [33m63487[39m,
                 serverLanguage: [33m8[39m,
                 serverStatus: [33m2[39m,
                 serverCapabilities2: [33m32783[39m,
                 scrambleLength: [33m21[39m,
                 filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                 scrambleBuff2: <Buffer 56 63 6f 24 61 3f 57 77 71 53 2c 7d>,
                 filler3: <Buffer 00>,
                 pluginData: [32m'mysql_native_password'[39m,
                 protocol41: [33mtrue[39m } },
           _handshaked: [33mtrue[39m,
           _ended: [33mfalse[39m,
           _destroyed: [33mfalse[39m,
           _queue: 
            [ { domain: [1mnull[22m,
                _events: 
                 { error: [36m[Function][39m,
                   packet: [36m[Function][39m,
                   end: [36m[Function][39m,
                   timeout: [36m[Function][39m,
                   [32m'start-tls'[39m: [36m[Function][39m },
                _maxListeners: [33m10[39m,
                _callback: [36m[Function][39m,
                _callSite: [1mnull[22m,
                _ended: [33mtrue[39m,
                _timeout: [90mundefined[39m,
                _idleNext: [1mnull[22m,
                _idlePrev: [1mnull[22m,
                _idleStart: [1mnull[22m,
                _idleTimeout: [90mundefined[39m,
                _repeat: [1mnull[22m,
                _config: 
                 { host: [32m'192.168.0.16'[39m,
                   port: [33m3306[39m,
                   localAddress: [90mundefined[39m,
                   socketPath: [90mundefined[39m,
                   user: [32m'ben'[39m,
                   password: [32m'250BenHop!@#'[39m,
                   database: [32m'arfSync'[39m,
                   connectTimeout: [33m10000[39m,
                   insecureAuth: [33mfalse[39m,
                   supportBigNumbers: [33mfalse[39m,
                   bigNumberStrings: [33mfalse[39m,
                   dateStrings: [33mfalse[39m,
                   debug: [90mundefined[39m,
                   trace: [33mtrue[39m,
                   stringifyObjects: [33mfalse[39m,
                   timezone: [32m'local'[39m,
                   flags: [32m''[39m,
                   queryFormat: [90mundefined[39m,
                   pool: [90mundefined[39m,
                   ssl: [33mfalse[39m,
                   multipleStatements: [33mfalse[39m,
                   typeCast: [33mtrue[39m,
                   maxPacketSize: [33m0[39m,
                   charsetNumber: [33m33[39m,
                   clientFlags: [33m193487[39m,
                   protocol41: [33mtrue[39m },
                _handshakeInitializationPacket: 
                 { protocolVersion: [33m10[39m,
                   serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
                   threadId: [33m83[39m,
                   scrambleBuff1: <Buffer 46 25 25 29 3e 3a 4a 44>,
                   filler1: <Buffer 00>,
                   serverCapabilities1: [33m63487[39m,
                   serverLanguage: [33m8[39m,
                   serverStatus: [33m2[39m,
                   serverCapabilities2: [33m32783[39m,
                   scrambleLength: [33m21[39m,
                   filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
                   scrambleBuff2: <Buffer 56 63 6f 24 61 3f 57 77 71 53 2c 7d>,
                   filler3: <Buffer 00>,
                   pluginData: [32m'mysql_native_password'[39m,
                   protocol41: [33mtrue[39m } } ],
           _handshakeInitializationPacket: 
            { protocolVersion: [33m10[39m,
              serverVersion: [32m'5.5.38-0ubuntu0.12.04.1'[39m,
              threadId: [33m83[39m,
              scrambleBuff1: <Buffer 46 25 25 29 3e 3a 4a 44>,
              filler1: <Buffer 00>,
              serverCapabilities1: [33m63487[39m,
              serverLanguage: [33m8[39m,
              serverStatus: [33m2[39m,
              serverCapabilities2: [33m32783[39m,
              scrambleLength: [33m21[39m,
              filler2: <Buffer 00 00 00 00 00 00 00 00 00 00>,
              scrambleBuff2: <Buffer 56 63 6f 24 61 3f 57 77 71 53 2c 7d>,
              filler3: <Buffer 00>,
              pluginData: [32m'mysql_native_password'[39m,
              protocol41: [33mtrue[39m },
           _parser: 
            { _supportBigNumbers: [33mfalse[39m,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 00 00 00>,
              _longPacketBuffers: [],
              _offset: [33m11[39m,
              _packetEnd: [33m11[39m,
              _packetHeader: { length: [33m7[39m, number: [33m2[39m },
              _packetOffset: [33m4[39m,
              _onError: [36m[Function][39m,
              _onPacket: [36m[Function][39m,
              _nextPacketNumber: [33m3[39m,
              _encoding: [32m'utf-8'[39m,
              _paused: [33mfalse[39m } },
        _connectCalled: [33mtrue[39m,
        state: [32m'authenticated'[39m,
        threadId: [33m83[39m } } }
